<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white"
    tools:context=".kotlin_variable">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical"
        android:padding="20dp"
        tools:layout_editor_absoluteX="0dp"
        tools:layout_editor_absoluteY="83dp">

        <TextView
            android:id="@+id/textView21"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"

            android:text="KOTLIN STRING"
            android:textAlignment="center"
            android:textSize="34sp"
            android:textStyle="bold" />

        <ScrollView
            android:layout_width="match_parent"
            android:layout_height="match_parent" >

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:padding="20dp"
                android:orientation="vertical">

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:orientation="horizontal">

                    <Button
                        android:id="@+id/back_string"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="BACK" />

                    <Button
                        android:id="@+id/home_string"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="HOME" />

                    <Button
                        android:id="@+id/next_string"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:text="NEXT" />
                </LinearLayout>

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Kotlin Strings "
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Strings are used for storing text. "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="A string contains a collection of characters surrounded by double quotes: "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Example "
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var greeting = 'Hello''\n
  println(greeting) \n
}"
                    android:textAlignment="viewStart"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Hello "
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Unlike Java, you do not have to specify that the variable should be a String. Kotlin is smart enough to understand that the greeting variable in the example above is a String because of the double quotes."
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="However, just like with other data types, you can specify the type if you insist: "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Example "
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var greeting: String = ''Hello''\n
  println(greeting) \n
}"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Hello"
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Access a String "
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="To access the characters (elements) of a string, you must refer to the index number inside square brackets. "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="String indexes start with 0. In the example below, we access the first and third element in txt: "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Example  "
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="fun main() {\n
  var txt = ''Hello World''\n
  println(txt[0]) // first element/character\n
  println(txt[2]) // third element/character\n
} "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="
H\n
l "
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="String Length "
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="A String in Kotlin is an object, which contain properties and functions that can perform certain operations on strings, by writing a dot character (.) after the specific string variable. For example, the length of a string can be found with the length property: "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Example"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var txt = ''ABCDEFGHIJKLMNOPQRSTUVWXYZ''\n
  println(''The length of the txt string is: '' + txt.length);\n
}"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="The length of the txt string is: 26 "
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="String Functions "
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" There are many string functions available, for example toUpperCase() and toLowerCase():"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Example"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var txt = ''Hello World''\n
  println(txt.toUpperCase())\n
  println(txt.toLowerCase())\n
}"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="
HELLO WORLD\n
 hello world"
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Comparing Strings"
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" The compareTo(string) function compares two strings and returns 0 if both are equal:"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Example "
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var txt1 = ''Hello World''\n
  var txt2 = ''Hello World''\n
  println(txt1.compareTo(txt2))  // Outputs 0 (they are equal)\n
}"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" 0 "
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Finding a String in a String"
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" The indexOf() function returns the index (the position) of the first occurrence of a specified text in a string (including whitespace):"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="fun main() {\n
  var txt = ''Please locate where 'locate' occurs!''\n
  println(txt.indexOf(''locate''))\n
  } "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output "
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" 7 "
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Quotes Inside a String"
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" To use quotes inside a string, use single quotes ('):"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Example"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var txt1 = ''It's alright''\n
  var txt2 = ''That's great''\n
  println(txt1) \n
  println(txt2) \n
}"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" It's alright\n
That's great"
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="String Concatenation "
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="The + operator can be used between strings to add them together to make a new string. This is called concatenation: "
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Example "
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var firstName = ''John''\n
  var lastName = ''Doe''\n
  println(firstName + '' '' + lastName)\n
  }"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />


                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" John Doe"
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" You can also use the plus() function to concatenate two strings:"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Example "
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var firstName = ''John ''\n
  var lastName = ''Doe''\n
  println(firstName.plus(lastName))\n
}"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="John Doe"
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="String Templates/Interpolation "
                    android:textColor="@color/textcolor"
                    android:textSize="14sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Instead of concatenation, you can also use ''string templates'', which is an easy way to add variables and expressions inside a string."
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Just refer to the variable with the $ symbol:"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />
                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text="Example "
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" fun main() {\n
  var firstName = ''John''\n
  var lastName = ''Doe''\n
  println(''My name is $firstName $lastName'')\n
  }"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" Output"
                    android:textColor="@color/textcolor"
                    android:textSize="12sp"
                    android:textStyle="bold" />

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="10dp"
                    android:text=" My name is John Doe"
                    android:textAlignment="center"
                    android:textColor="@color/textcolor"
                    android:textSize="10sp" />



            </LinearLayout>
        </ScrollView>
    </LinearLayout>
</androidx.constraintlayout.widget.ConstraintLayout>